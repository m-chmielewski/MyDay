@inject TasksClient TC
@inject PresentationController PC
@*Columns representing different task states from Today component*@

<div class="today-column" style="width: @PC.ColumnWidth">
    <div class="column-header-wrapper">
        <MatH5>@ColumnTitle</MatH5>
    </div>

    <div class="column-content-wrapper">
        @if (AllTasks != null)
        {
            @foreach (var task in Tasks)
            {
                @*Lay out all the tasks in certain state*@
                <TaskCard Element="task" />
            }
        }
    </div>
</div>

@code {
    //Defined in Today component
    [Parameter]
    public string ColumnTitle { get; set; }

    public List<TaskModel> AllTasks { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        //Update this component when tasks are being changed
        PC.OnTaskChange += StateHasChanged;
    }

    protected override void OnParametersSet()
    {
        AllTasks = TC.AllTasks;
    }

    //Get all tasks in certain state
    public List<TaskModel> Tasks
    {
        get
        {
            if (ColumnTitle == "ToDo")
                return AllTasks.Where(x => x.State == TaskState.ToDo).ToList();
            if (ColumnTitle == "Blockers")
                return AllTasks.Where(x => x.State == TaskState.Blocker).ToList();
            else if (ColumnTitle == "Blocked")
                return AllTasks.Where(x => x.State == TaskState.Blocked).ToList();
            else if (ColumnTitle == "Done")
                return AllTasks.Where(x => x.State == TaskState.Done).ToList();
            else
                return new List<TaskModel>();
        }
    }
}

